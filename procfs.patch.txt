--- a/cpuinfo.go
+++ b/cpuinfo.go
@@ -407,6 +407,50 @@ func parseCPUInfoPPC(info []byte) ([]CPUInfo, error) {
        return cpuinfo, nil
 }

+func parseCPUInfoRISCV(info []byte) ([]CPUInfo, error) {
+       scanner := bufio.NewScanner(bytes.NewReader(info))
+
+       firstLine := firstNonEmptyLine(scanner)
+       if !strings.HasPrefix(firstLine, "processor") || !strings.Contains(firstLine, ":") {
+               return nil, errors.New("invalid cpuinfo file: " + firstLine)
+       }
+       field := strings.SplitN(firstLine, ": ", 2)
+       v, err := strconv.ParseUint(field[1], 0, 32)
+       if err != nil {
+               return nil, err
+       }
+       firstcpu := CPUInfo{Processor: uint(v)}
+       cpuinfo := []CPUInfo{firstcpu}
+       i := 0
+
+       for scanner.Scan() {
+               line := scanner.Text()
+               if !strings.Contains(line, ":") {
+                       continue
+               }
+               field := strings.SplitN(line, ": ", 2)
+               switch strings.TrimSpace(field[0]) {
+               case "processor":
+                       v, err := strconv.ParseUint(field[1], 0, 32)
+                       if err != nil {
+                               return nil, err
+                       }
+                       i = int(v)
+                       cpuinfo = append(cpuinfo, CPUInfo{}) // start of the next processor
+                       cpuinfo[i].Processor = uint(v)
+               case "hart":
+                       cpuinfo[i].CoreID = field[1]
+               case "isa":
+                       cpuinfo[i].ModelName = field[1]
